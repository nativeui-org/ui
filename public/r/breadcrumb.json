{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "breadcrumb",
  "type": "registry:component",
  "title": "Breadcrumb",
  "description": "A breadcrumb component for React Native applications.",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/breadcrumb/breadcrumb.tsx",
      "content": "import * as React from \"react\";\nimport { View, Text, Pressable, GestureResponderEvent } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { cn } from \"@/lib/utils\";\n\nconst Breadcrumb = React.forwardRef<\n  View,\n  React.ComponentPropsWithoutRef<typeof View> & {\n    separator?: React.ReactNode;\n  }\n>(({ style, separator, ...props }, ref) => (\n  <View\n    ref={ref}\n    accessibilityRole=\"header\"\n    accessibilityLabel=\"breadcrumb\"\n    style={style}\n    {...props}\n  />\n));\n\nBreadcrumb.displayName = \"Breadcrumb\";\n\nconst BreadcrumbList = React.forwardRef<\n  View,\n  React.ComponentPropsWithoutRef<typeof View>\n>(({ className, style, ...props }, ref) => (\n  <View\n    ref={ref}\n    style={style}\n    className={cn(\"flex-row flex-wrap items-center gap-2 md:gap-3\", className)}\n    {...props}\n  />\n));\n\nBreadcrumbList.displayName = \"BreadcrumbList\";\n\nconst BreadcrumbItem = React.forwardRef<\n  View,\n  React.ComponentPropsWithoutRef<typeof View>\n>(({ className, style, ...props }, ref) => (\n  <View\n    ref={ref}\n    style={style}\n    className={cn(\"flex-row items-center gap-2\", className)}\n    {...props}\n  />\n));\n\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\ninterface BreadcrumbLinkProps\n  extends React.ComponentPropsWithoutRef<typeof Pressable> {\n  asChild?: boolean;\n  href?: string;\n  active?: boolean;\n}\n\nconst BreadcrumbLink = React.forwardRef<View, BreadcrumbLinkProps>(\n  (\n    { asChild, className, style, href, active, onPress, children, ...props },\n    ref\n  ) => {\n    const handlePress = (e: GestureResponderEvent) => {\n      if (href) {\n        console.log(`Navigation to: ${href}`);\n      }\n      if (onPress) {\n        onPress(e);\n      }\n    };\n\n    return (\n      <Pressable\n        ref={ref}\n        style={style}\n        className={cn(\n          \"py-2 active:opacity-70\",\n          active ? \"text-foreground font-medium\" : \"text-muted-foreground\",\n          className\n        )}\n        onPress={handlePress}\n        {...props}\n      >\n        {typeof children === \"string\" ? (\n          <Text\n            className={cn(\n              active ? \"text-foreground font-medium\" : \"text-muted-foreground\",\n              \"text-base\"\n            )}\n          >\n            {children}\n          </Text>\n        ) : (\n          children\n        )}\n      </Pressable>\n    );\n  }\n);\n\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nconst BreadcrumbPage = React.forwardRef<\n  Text,\n  React.ComponentPropsWithoutRef<typeof Text>\n>(({ className, style, ...props }, ref) => (\n  <Text\n    ref={ref}\n    style={style}\n    accessibilityRole=\"text\"\n    accessibilityState={{ disabled: true }}\n    className={cn(\"font-medium text-foreground text-base\", className)}\n    {...props}\n  />\n));\n\nBreadcrumbPage.displayName = \"BreadcrumbPage\";\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  style,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof View>) => (\n  <View\n    accessibilityRole=\"none\"\n    accessibilityLabel=\"separator\"\n    style={style}\n    className={cn(\"mx-0.5\", className)}\n    {...props}\n  >\n    {children ?? <Feather name=\"chevron-right\" size={20} color=\"#888\" />}\n  </View>\n);\n\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nconst BreadcrumbEllipsis = ({\n  className,\n  style,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof View>) => (\n  <View\n    accessibilityRole=\"none\"\n    accessibilityLabel=\"more\"\n    style={style}\n    className={cn(\"flex items-center justify-center py-1\", className)}\n    {...props}\n  >\n    <Feather name=\"more-horizontal\" size={20} color=\"#888\" />\n    <Text className=\"sr-only\">More</Text>\n  </View>\n);\n\nBreadcrumbEllipsis.displayName = \"BreadcrumbEllipsis\";\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n};\n",
      "type": "registry:component"
    }
  ],
  "changelog": []
}